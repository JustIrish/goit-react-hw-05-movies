{"version":3,"file":"static/js/81.ea2770a8.chunk.js","mappings":"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","sources":["getMoviesApi.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '12c5bb7038d66843aec293c82a0d8d17';\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?${params}`);\n  return response.data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?${params}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(`search/movie?${params}&query=${query}`);\n  return response.data;\n};\n\nexport const getCastById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?${params}`);\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?${params}`);\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLinkStyled = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 8px;\n  margin: 10px 0px 10px 10px;\n  color: #000;\n  border: 1px solid #000;\n  border-radius: 4px;\n  text-decoration: none;\n  font-size: 14px;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: color 300ms cubic-bezier(0.165, 0.84, 0.44, 1),\n    border-color 300ms cubic-bezier(0.165, 0.84, 0.44, 1);\n\n  :hover {\n    color: #d81d56;\n    border-color: #d81d56;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { BackLinkStyled } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <BackLinkStyled to={to}>\n      <HiArrowLeft size=\"16\" />\n      {children}\n    </BackLinkStyled>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackdropImg = styled.div`\n  background-image: linear-gradient(\n      to right,\n      rgba(255, 255, 255, 0.7),\n      rgba(255, 255, 255, 0.7)\n    ),\n    url(${props => props.backdrop});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`;\n\nexport const CardMovie = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const PosterImage = styled.img`\n  width: 300px;\n  margin-left: 10px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 12px;\n  width: 450px;\n`;\n\nexport const AddInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 24px;\n\n  li {\n    padding: 2px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n  font-weight: 500;\n  transition: color 300ms cubic-bezier(0.165, 0.84, 0.44, 1);\n\n  :hover,\n  :focus-visible {\n    color: #d81d56;\n  }\n\n  &.active {\n    color: #d81d56;\n  }\n`;\n","import toast from 'react-hot-toast';\nimport { getMovieById } from 'getMoviesApi';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  BackdropImg,\n  CardMovie,\n  PosterImage,\n  MovieInfo,\n  AddInfo,\n  StyledLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(data => setMovie(data))\n      .catch(error => {\n        console.log(`${error.name}: ${error.message}`);\n        toast.error('Sorry, something went wrong...');\n      });\n  }, [movieId]);\n\n  if (!movie) return;\n  const { backdrop_path, poster_path, title, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <main>\n      <BackdropImg\n        backdrop={`https://image.tmdb.org/t/p/w1280${backdrop_path}`}\n      >\n        <BackLink to={backLinkHref}>Go back</BackLink>\n        <CardMovie>\n          <PosterImage\n            src={\n              poster_path\n                ? `${IMG_URL}${poster_path}`\n                : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-768x1129.jpg'\n            }\n            alt={title}\n            loading=\"lazy\"\n          />\n          <MovieInfo>\n            <h2>{title}</h2>\n            <p>User Score: {Math.round(vote_average * 10)}%</p>\n            <h3>Owerview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres ? genres.map(genre => genre.name).join(', ') : ''}</p>\n          </MovieInfo>\n        </CardMovie>\n        <AddInfo>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <StyledLink to={'cast'} state={{ from: backLinkHref }}>\n                Cast\n              </StyledLink>\n            </li>\n            <li>\n              <StyledLink to={'reviews'} state={{ from: backLinkHref }}>\n                Reviews\n              </StyledLink>\n            </li>\n          </ul>\n        </AddInfo>\n      </BackdropImg>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","params","URLSearchParams","api_key","getTrending","response","data","getMovieById","movieId","getSearchMovies","query","getCastById","getReviews","BackLinkStyled","styled","Link","BackLink","to","children","size","BackdropImg","props","backdrop","CardMovie","PosterImage","MovieInfo","AddInfo","StyledLink","NavLink","useState","movie","setMovie","useParams","backLinkHref","useLocation","state","from","useEffect","then","catch","error","console","log","name","message","toast","backdrop_path","poster_path","title","vote_average","overview","genres","src","alt","loading","Math","round","map","genre","join","Suspense","fallback","Loader"],"sourceRoot":""}