{"version":3,"file":"static/js/747.81fd22ff.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","getMoviesApi.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const ListItem = styled.li`\n  width: calc(100% / 4 - 48px);\n  border-radius: 15px;\n  background-color: #e8e9ec;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  scale: 1;\n  transition: scale 500ms cubic-bezier(0.165, 0.84, 0.44, 1),\n    box-shadow 500ms cubic-bezier(0.165, 0.84, 0.44, 1);\n\n  &:hover {\n    scale: 1.02;\n    box-shadow: 0 0 7px 2px #a8a6a5;\n  }\n`;\n\nexport const PosterImg = styled.img`\n  height: 400px;\n  border-radius: 15px 15px 0px 0px;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  color: #656870;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { List, ListItem, PosterImg, MovieTitle } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <ListItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <PosterImg\n              src={\n                poster_path\n                  ? `${IMG_URL}${poster_path}`\n                  : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-768x1129.jpg'\n              }\n              alt={title}\n              loading=\"lazy\"\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '12c5bb7038d66843aec293c82a0d8d17';\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?${params}`);\n  return response.data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?${params}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(`search/movie?${params}&query=${query}`);\n  return response.data;\n};\n\nexport const getCastById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?${params}`);\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?${params}`);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nexport const SearchInput = styled.input`\n  height: 42px;\n  padding: 9px 32px 8px 8px;\n  border-radius: 4px 0px 0px 4px;\n  border: 2px solid #656870;\n  border-right: 0;\n  outline: none;\n  font: inherit;\n  font-size: 18px;\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 0px 4px 4px 0px;\n  border: 2px solid #656870;\n  border-left: 0;\n  background-color: #fff;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n  outline: none;\n`;\n","import PropTypes from 'prop-types';\nimport { CiSearch } from 'react-icons/ci';\nimport toast from 'react-hot-toast';\nimport { SearchForm, SearchInput, SearchBtn } from './SearchBar.styled';\nimport { useEffect, useState } from 'react';\n\nexport const SearchBar = ({ value, onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handlerSubmit = evt => {\n    evt.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Please, enter your query!');\n    }\n    onSubmit(query);\n  };\n\n  useEffect(() => setQuery(value), [value]);\n\n  return (\n    <SearchForm onSubmit={handlerSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"input\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <SearchBtn type=\"submit\">\n        <CiSearch size={22} />\n      </SearchBtn>\n    </SearchForm>\n  );\n};\n\nSearchBar.propTypes = {\n  value: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import toast from 'react-hot-toast';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'getMoviesApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchQuery === '') return setMovies([]);\n    setLoading(true);\n    getSearchMovies(searchQuery)\n      .then(data => {\n        if (data.results.length === 0) {\n          toast.error(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n          setSearchParams({});\n        }\n        setMovies(data.results);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.log(`${error.name}: ${error.message}`);\n        toast.error('Sorry, something went wrong...');\n      });\n  }, [searchQuery, setSearchParams]);\n\n  const changeQuery = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <main>\n      <SearchBar value={searchQuery} onSubmit={changeQuery} />\n      {loading && <Loader />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","ListItem","PosterImg","MovieTitle","MoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","loading","axios","params","URLSearchParams","api_key","getTrending","response","data","getMovieById","movieId","getSearchMovies","query","getCastById","getReviews","SearchForm","SearchInput","SearchBtn","SearchBar","value","onSubmit","useState","setQuery","useEffect","evt","preventDefault","trim","toast","type","name","onChange","e","target","size","setMovies","setLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","then","results","length","catch","error","console","log","message","Loader"],"sourceRoot":""}