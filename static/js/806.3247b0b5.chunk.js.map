{"version":3,"file":"static/js/806.3247b0b5.chunk.js","mappings":"iQAEaA,EAAWC,EAAAA,GAAAA,IAAH,0CAIRC,EAAOD,EAAAA,GAAAA,GAAH,wH,SCmCjB,EAnCgB,WACd,OAA8BE,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,IAXAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GACJN,EAAWM,EAAKC,QACjB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAR,UAAeF,EAAMG,KAArB,aAA8BH,EAAMI,UACpCC,EAAAA,GAAAA,MAAY,iCACb,GACJ,GAAE,CAACb,IAECF,EAEL,OACE,SAACJ,EAAD,UACGI,EAAQgB,OAAS,GAChB,SAAClB,EAAD,UACGE,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADE,OAQf,sEAIP,C,mMCrCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IACMC,EAAS,IAAIC,gBAAgB,CACjCC,QAFc,qCAKHC,EAAW,mCAAG,oGACFJ,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBI,EADmB,yBAElBA,EAASnB,MAFS,2CAAH,qDAKXoB,EAAY,mCAAG,WAAMzB,GAAN,uFACHmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,YAA8BoB,IAD3B,cACpBI,EADoB,yBAEnBA,EAASnB,MAFU,2CAAH,sDAKZqB,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,uBAA0BC,EAA1B,kBAA0CO,IADpC,cACvBH,EADuB,yBAEtBA,EAASnB,MAFa,2CAAH,sDAKfuB,EAAW,mCAAG,WAAM5B,GAAN,uFACFmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCoB,IADpC,cACnBI,EADmB,yBAElBA,EAASnB,MAFS,2CAAH,sDAKXF,EAAU,mCAAG,WAAMH,GAAN,uFACDmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCoB,IADrC,cAClBI,EADkB,yBAEjBA,EAASnB,MAFQ,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","getMoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListWrap = styled.div`\n  padding: 16px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  p {\n    margin-top: 12px;\n  }\n`;\n","import toast from 'react-hot-toast';\nimport { getReviews } from 'getMoviesApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ListWrap, List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.log(`${error.name}: ${error.message}`);\n        toast.error('Sorry, something went wrong...');\n      });\n  }, [movieId]);\n\n  if (!reviews) return;\n\n  return (\n    <ListWrap>\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <b>Author: {author}</b>\n              <p>{content}</p>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </ListWrap>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '12c5bb7038d66843aec293c82a0d8d17';\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?${params}`);\n  return response.data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?${params}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(`search/movie?${params}&query=${query}`);\n  return response.data;\n};\n\nexport const getCastById = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?${params}`);\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?${params}`);\n  return response.data;\n};\n"],"names":["ListWrap","styled","List","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","data","results","catch","error","console","log","name","message","toast","length","map","id","author","content","axios","params","URLSearchParams","api_key","getTrending","response","getMovieById","getSearchMovies","query","getCastById"],"sourceRoot":""}